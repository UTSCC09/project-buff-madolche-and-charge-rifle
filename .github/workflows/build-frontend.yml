name: Publish mdTogether frontend to GHCR

on:
  push:
    # Only run this workflow if it is a commit to master.
    branches:
      - master
    # Only run this workflow if the commit has modified files from frontend
    paths:
      - md-together/**


env:
  IMAGE_NAME: frontend-mdtogether

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    defaults:
      run:
        working-directory: md-together

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
        # TODO: Create a Personal Access Tokens (PAT) with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ secrets.USERNAME }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  # Re-deploy newly built frontend image to VM. Only runs if successfully built.
  # Used https://stackoverflow.com/questions/62750603/github-actions-trigger-another-action-after-one-action-is-completed
  # and https://github.com/marketplace/actions/ssh-remote-commands
  deploy:
    name: Deploy frontend
    needs: push
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.VM_USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        port: ${{ secrets.PORT }}
        # http version
        # script: |
        #   docker stop $(docker ps -f ancestor=ghcr.io/utscc09/frontend-mdtogether:latest -q)
        #   docker run -d --rm -p 80:80 ghcr.io/utscc09/frontend-mdtogether
        # https version
        script: |
          cd ${{ secrets.WORKING_DIR }}
          docker kill $(docker ps -a -q)
          docker rm $(docker ps -a -q)
          docker-compose pull
          docker-compose up -d